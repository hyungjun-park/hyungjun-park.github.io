---
layout: post
title:  "Welcome to Jekyll!"
date:   2023-06-26 22:00:25 +0900
categories: jekyll update
---
# [도서] Good Code, Bad Code 
## 1. 코드 품질
### 1.1 코드는 어떻게 소프트웨어가 되는가
코드로부터 실제 서비스되는 환경에서 실행되는 소프트웨어가 되기까지의 과장은 대개 다음과 같다.
1. 개발자가 코드베이스의 로컬 복사본을 가지고 작업하면서 코드를 변경한다.
2. 작업이 끝나면 코드 검토를 위해 변경된 코드를 가지고 병합 요청을 한다.
3. 다른 개발자가 코드를 검토하고 변경을 제안할 수 있다.
4. 작성자와 검토자가 모두 동의하면 코드가 코드베이스에 병합된다.
5. 배포는 코드베이스를 가지고 주기적으로 일어난다.얼마나 자주 배포되는지는 조직과 팀마다 다를 수 있다.
6. 테스트에 실패하거나 코드가 컴파일되지 않으면 코드베이스에 병합되는 것을 막거나 코드가 배포되는 것을 막는다.

### 1.2 코드 품질의 목표
높은 품질의 코드의 4가지 목표
1. 작동해야 한다.
2. 작동이 멈춰서는 안 된다.
3. 변화하는 요구 사항에 적응해야 한다.
4. 이미 존재하는 기능을 또다시 구현해서는 안 된다.

#### 1.2.1 코드는 작동해야 한다.

#### 1.2.2 코드는 작동이 멈추면 안 된다.

#### 1.2.3 코드는 변경된 요구 사항에 적응할 수 있어야 한다.

#### 1.2.4 코드는 이미 존재하는 기능을 중복 구현해서는 안 된다.


[jekyll-docs]: https://jekyllrb.com/docs/home
[jekyll-gh]:   https://github.com/jekyll/jekyll
[jekyll-talk]: https://talk.jekyllrb.com/
